<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\cfs_test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\cfs_test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Aug 15 14:40:16 2024
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; flash_filesystem_write_product_nv &rArr; _internal_flash_filesystem_write_nv &rArr; cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_DAC_IRQHandler</a> from interrupts_hc32l17x.o(i.ADC_DAC_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[25]">CLKTRIM_IRQHandler</a> from interrupts_hc32l17x.o(i.CLKTRIM_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[a]">DMAC_IRQHandler</a> from interrupts_hc32l17x.o(i.DMAC_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[24]">FLASH_RAM_IRQHandler</a> from interrupts_hc32l17x.o(i.FLASH_RAM_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from interrupts_hc32l17x.o(i.HardFault_Handler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[12]">I2C0_IRQHandler</a> from interrupts_hc32l17x.o(i.I2C0_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[13]">I2C1_IRQHandler</a> from interrupts_hc32l17x.o(i.I2C1_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[23]">LCD_IRQHandler</a> from interrupts_hc32l17x.o(i.LCD_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[17]">LPTIM0_1_IRQHandler</a> from interrupts_hc32l17x.o(i.LPTIM0_1_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[e]">LPUART0_IRQHandler</a> from interrupts_hc32l17x.o(i.LPUART0_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[f]">LPUART1_IRQHandler</a> from interrupts_hc32l17x.o(i.LPUART1_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[22]">LVD_IRQHandler</a> from interrupts_hc32l17x.o(i.LVD_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_hc32l17x.o(.text) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1b]">PCA_IRQHandler</a> from interrupts_hc32l17x.o(i.PCA_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1f]">PCNT_IRQHandler</a> from interrupts_hc32l17x.o(i.PCNT_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[6]">PORTA_IRQHandler</a> from interrupts_hc32l17x.o(i.PORTA_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[7]">PORTB_IRQHandler</a> from interrupts_hc32l17x.o(i.PORTB_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[8]">PORTC_E_IRQHandler</a> from interrupts_hc32l17x.o(i.PORTC_E_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[9]">PORTD_F_IRQHandler</a> from interrupts_hc32l17x.o(i.PORTD_F_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_hc32l17x.o(.text) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from interrupts_hc32l17x.o(i.RTC_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_hc32l17x.o(.text) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from interrupts_hc32l17x.o(i.SPI0_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from interrupts_hc32l17x.o(i.SPI1_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_hc32l17x.o(.text) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from interrupts_hc32l17x.o(i.SysTick_Handler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_hc32l17x.o(i.SystemInit) referenced from startup_hc32l17x.o(.text)
 <LI><a href="#[14]">TIM0_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM0_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[15]">TIM1_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM1_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[16]">TIM2_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM2_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[b]">TIM3_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM3_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[18]">TIM4_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM4_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[19]">TIM5_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM5_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1a]">TIM6_IRQHandler</a> from interrupts_hc32l17x.o(i.TIM6_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[c]">UART0_2_IRQHandler</a> from interrupts_hc32l17x.o(i.UART0_2_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[d]">UART1_3_IRQHandler</a> from interrupts_hc32l17x.o(i.UART1_3_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[20]">VC0_IRQHandler</a> from interrupts_hc32l17x.o(i.VC0_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[21]">VC1_2_IRQHandler</a> from interrupts_hc32l17x.o(i.VC1_2_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[1c]">WDT_IRQHandler</a> from interrupts_hc32l17x.o(i.WDT_IRQHandler) referenced from startup_hc32l17x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_hc32l17x.o(.text)
 <LI><a href="#[29]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[26]">main</a> from system_hc32l17x.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c4]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c5]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c6]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c7]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c8]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, startup_hc32l17x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l17x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l17x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l17x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[c9]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_valid_data_number
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[be]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[ae]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read_contrast
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[d0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[32]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, system_hc32l17x.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = main &rArr; $Super$$main &rArr; flash_filesystem_write_product_nv &rArr; _internal_flash_filesystem_write_nv &rArr; cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_DAC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.ADC_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DAC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_IRQHandler (Weak Reference)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CLKTRIM_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.CLKTRIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLKTRIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkTrim_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DMAC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.DMAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMAC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dmac_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>FLASH_RAM_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.FLASH_RAM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_RAM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ram_IRQHandler (Weak Reference)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Flash_LockAll</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash.o(i.Flash_LockAll))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteWord
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteByte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
</UL>

<P><STRONG><a name="[40]"></a>Flash_SectorErase</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, flash.o(i.Flash_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_erasing_page
</UL>

<P><STRONG><a name="[41]"></a>Flash_UnlockAll</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(i.Flash_UnlockAll))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteWord
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteByte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
</UL>

<P><STRONG><a name="[43]"></a>Flash_WriteByte</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, flash.o(i.Flash_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Flash_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_byte
</UL>

<P><STRONG><a name="[44]"></a>Flash_WriteHalfWord</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, flash.o(i.Flash_WriteHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Flash_WriteHalfWord
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_half_word
</UL>

<P><STRONG><a name="[45]"></a>Flash_WriteWord</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, flash.o(i.Flash_WriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Flash_WriteWord
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_word
</UL>

<P><STRONG><a name="[46]"></a>Gpio_Init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gpio.o(i.Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gpio_Init &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_port_init
</UL>

<P><STRONG><a name="[c2]"></a>Gpio_SetAfMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gpio.o(i.Gpio_SetAfMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Gpio_SetAfMode
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_port_init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>I2C0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LCD_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.LCD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>LPTIM0_1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.LPTIM0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTIM0_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim1_IRQHandler (Weak Reference)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.LPUART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpUart0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.LPUART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpUart1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LVD_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.LVD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LVD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvd_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PCA_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PCA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PCNT_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PCNT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCNT_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcnt_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PORTA_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PORTA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortA_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PORTB_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PORTB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTB_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortB_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PORTC_E_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PORTC_E_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTC_E_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_IRQHandler (Weak Reference)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortC_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PORTD_F_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.PORTD_F_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTD_F_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_IRQHandler (Weak Reference)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortD_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rtc_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SetBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ddl.o(i.SetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableIrq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableFunc
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ClrStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Sysctrl_GetHClkFreq</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, sysctrl.o(i.Sysctrl_GetHClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetPClkFreq
</UL>

<P><STRONG><a name="[5f]"></a>Sysctrl_GetPClkFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysctrl.o(i.Sysctrl_GetPClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Sysctrl_GetPClkFreq &rArr; Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[60]"></a>Sysctrl_SetPeripheralGate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sysctrl.o(i.Sysctrl_SetPeripheralGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_port_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[61]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_hc32l17x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemCoreClockUpdate &rArr; Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, system_hc32l17x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitHidePin
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIM0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim2_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM4_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim4_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM5_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim5_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim6_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART0_2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.UART0_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_IRQHandler (Weak Reference)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART1_3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.UART1_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_IRQHandler (Weak Reference)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Uart_ClrStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uart.o(i.Uart_ClrStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_ClrStatus &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[6f]"></a>Uart_EnableFunc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(i.Uart_EnableFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_EnableFunc &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[70]"></a>Uart_EnableIrq</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(i.Uart_EnableIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_EnableIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[71]"></a>Uart_Init</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, uart.o(i.Uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[c0]"></a>Uart_SendDataIt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.Uart_SendDataIt))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_ble_uart0_send_string
</UL>

<P><STRONG><a name="[20]"></a>VC0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.VC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VC0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vc0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>VC1_2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.VC1_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VC1_2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vc2_IRQHandler (Weak Reference)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vc1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l17x.o(i.WDT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDT_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l17x.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>__0sprintf$3</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d2]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[bd]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, adc.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_assert</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, retarget_io.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_write_nv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_read_nv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check_data_block
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[d3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7b]"></a>abort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget_io.o(i.abort))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[a4]"></a>cfs_nv_clear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, cycle_flash_system.o(i.cfs_nv_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = cfs_nv_clear &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_data_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_erase_product_nv
</UL>

<P><STRONG><a name="[a6]"></a>cfs_nv_get_current_id</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cycle_flash_system.o(i.cfs_nv_get_current_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cfs_nv_get_current_id &rArr; cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_current_id_get
</UL>

<P><STRONG><a name="[a7]"></a>cfs_nv_get_current_valid_id</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cycle_flash_system.o(i.cfs_nv_get_current_valid_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cfs_nv_get_current_valid_id &rArr; cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_valid_id_number_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_current_valid_id_get
</UL>

<P><STRONG><a name="[a8]"></a>cfs_nv_object_delete</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cycle_flash_system.o(i.cfs_nv_object_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cfs_nv_object_delete &rArr; cfs_system_oc_object_delete &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_delete_object
</UL>

<P><STRONG><a name="[aa]"></a>cfs_nv_object_init</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, cycle_flash_system.o(i.cfs_nv_object_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cfs_nv_object_init &rArr; cfs_filesystem_object_id_init &rArr; cfs_filesystem_tight_data_page_id_init &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_add_oc_object
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_check_flash_repeat_address
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_init
</UL>

<P><STRONG><a name="[88]"></a>cfs_nv_read</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, cycle_flash_system.o(i.cfs_nv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = cfs_nv_read &rArr; cfs_filesystem_flsh_data_read &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_flsh_data_read
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_system_object_get
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_valid_id_number_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_struct_type_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_read_nv
</UL>

<P><STRONG><a name="[8a]"></a>cfs_nv_write</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cycle_flash_system.o(i.cfs_nv_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_struct_type_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_write_nv
</UL>

<P><STRONG><a name="[ac]"></a>cfs_port_system_flash_erasing_page</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_erasing_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cfs_port_system_flash_erasing_page &rArr; Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_data_clear
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[ab]"></a>cfs_port_system_flash_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_init))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
</UL>

<P><STRONG><a name="[7f]"></a>cfs_port_system_flash_lock_disable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_lock_disable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data_block
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_flash_data_block
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__contrast_flash_data_block
</UL>

<P><STRONG><a name="[7d]"></a>cfs_port_system_flash_lock_enable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_lock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data_block
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_flash_data_block
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__contrast_flash_data_block
</UL>

<P><STRONG><a name="[81]"></a>cfs_port_system_flash_read</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cfs_port_system_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_flash_data_block
</UL>

<P><STRONG><a name="[b0]"></a>cfs_port_system_flash_read_checking_null_values</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_read_checking_null_values))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cfs_port_system_flash_read_checking_null_values
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_checking_null_values
</UL>

<P><STRONG><a name="[7e]"></a>cfs_port_system_flash_read_contrast</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_read_contrast))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = cfs_port_system_flash_read_contrast &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__contrast_flash_data_block
</UL>

<P><STRONG><a name="[85]"></a>cfs_port_system_flash_write_byte</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cfs_port_system_flash_write_byte &rArr; Flash_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
</UL>

<P><STRONG><a name="[84]"></a>cfs_port_system_flash_write_half_word</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_write_half_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cfs_port_system_flash_write_half_word &rArr; Flash_WriteHalfWord
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
</UL>

<P><STRONG><a name="[83]"></a>cfs_port_system_flash_write_word</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, cfs_port_device_flash.o(i.cfs_port_system_flash_write_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cfs_port_system_flash_write_word &rArr; Flash_WriteWord
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
</UL>

<P><STRONG><a name="[9b]"></a>cfs_system_oc_add_object</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, cfs_system_oc.o(i.cfs_system_oc_add_object))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = cfs_system_oc_add_object &rArr; cfs_system_utils_crc16_xmodem_check
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_add_oc_object
</UL>

<P><STRONG><a name="[90]"></a>cfs_system_oc_add_write_flash_data</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, cfs_system_oc.o(i.cfs_system_oc_add_write_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = cfs_system_oc_add_write_flash_data &rArr; __write_flash_data_block &rArr; __write_flash_data &rArr; cfs_port_system_flash_write_word &rArr; Flash_WriteWord
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check_data_block
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_erasing_page
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_system_object_get
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data_block
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__contrast_flash_data_block
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[97]"></a>cfs_system_oc_flash_checking_null_values</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, cfs_system_oc.o(i.cfs_system_oc_flash_checking_null_values))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = cfs_system_oc_flash_checking_null_values &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read_checking_null_values
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
</UL>

<P><STRONG><a name="[a5]"></a>cfs_system_oc_flash_data_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cfs_system_oc.o(i.cfs_system_oc_flash_data_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cfs_system_oc_flash_data_clear &rArr; cfs_port_system_flash_erasing_page &rArr; Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_erasing_page
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_clear
</UL>

<P><STRONG><a name="[8c]"></a>cfs_system_oc_flash_repeat_address</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, cfs_system_oc.o(i.cfs_system_oc_flash_repeat_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cfs_system_oc_flash_repeat_address
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_check_flash_repeat_address
</UL>

<P><STRONG><a name="[a9]"></a>cfs_system_oc_object_delete</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, cfs_system_oc.o(i.cfs_system_oc_object_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cfs_system_oc_object_delete &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_delete
</UL>

<P><STRONG><a name="[8e]"></a>cfs_system_oc_object_id_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_object_id_get))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_id
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[92]"></a>cfs_system_oc_object_id_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_object_id_set))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[9e]"></a>cfs_system_oc_object_linked_crc_16_verify</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, cfs_system_oc.o(i.cfs_system_oc_object_linked_crc_16_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_delete
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_valid_id
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_id
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
</UL>

<P><STRONG><a name="[9f]"></a>cfs_system_oc_object_struct_type_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_object_struct_type_get))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
</UL>

<P><STRONG><a name="[8f]"></a>cfs_system_oc_object_valid_id_number_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_object_valid_id_number_get))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_valid_id
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[94]"></a>cfs_system_oc_object_valid_id_number_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_object_valid_id_number_set))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[99]"></a>cfs_system_oc_read_flash_data</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, cfs_system_oc.o(i.cfs_system_oc_read_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check_data_block
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_flash_data_block
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_flsh_data_read
</UL>

<P><STRONG><a name="[91]"></a>cfs_system_oc_set_write_flash_data</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, cfs_system_oc.o(i.cfs_system_oc_set_write_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check_data_block
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read_contrast
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_disable
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_erasing_page
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_system_object_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[96]"></a>cfs_system_oc_system_object_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cfs_system_oc.o(i.cfs_system_oc_system_object_get))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_fixed_data_write
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[93]"></a>cfs_system_oc_valid_data_number</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, cfs_system_oc.o(i.cfs_system_oc_valid_data_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = cfs_system_oc_valid_data_number &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_cycle_data_write
</UL>

<P><STRONG><a name="[a2]"></a>cfs_system_oc_via_id_calculate_addr</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, cfs_system_oc.o(i.cfs_system_oc_via_id_calculate_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_valid_data_number
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_checking_null_values
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[9c]"></a>cfs_system_utils_crc16_xmodem_check</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, cfs_system_utils.o(i.cfs_system_utils_crc16_xmodem_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cfs_system_utils_crc16_xmodem_check
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_add_oc_object
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_object
</UL>

<P><STRONG><a name="[af]"></a>cfs_system_utils_crc16_xmodem_check_data_block</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, cfs_system_utils.o(i.cfs_system_utils_crc16_xmodem_check_data_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = cfs_system_utils_crc16_xmodem_check_data_block &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[c1]"></a>ddl_memclr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ddl.o(i.ddl_memclr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ddl_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_port_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[b1]"></a>delay1ms</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ddl.o(i.delay1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = delay1ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_ble_uart0_send_string
</UL>

<P><STRONG><a name="[b2]"></a>flash_filesystem_erase_product_nv</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cfs_demo.o(i.flash_filesystem_erase_product_nv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_filesystem_erase_product_nv &rArr; cfs_nv_clear &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b3]"></a>flash_filesystem_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, cfs_demo.o(i.flash_filesystem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = flash_filesystem_init &rArr; cfs_nv_object_init &rArr; cfs_filesystem_object_id_init &rArr; cfs_filesystem_tight_data_page_id_init &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b4]"></a>flash_filesystem_product_current_id_get</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cfs_demo.o(i.flash_filesystem_product_current_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_filesystem_product_current_id_get &rArr; cfs_nv_get_current_id &rArr; cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_id
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b5]"></a>flash_filesystem_product_current_valid_id_get</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cfs_demo.o(i.flash_filesystem_product_current_valid_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_filesystem_product_current_valid_id_get &rArr; cfs_nv_get_current_valid_id &rArr; cfs_system_oc_object_linked_crc_16_verify
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_get_current_valid_id
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b6]"></a>flash_filesystem_product_delete_object</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cfs_demo.o(i.flash_filesystem_product_delete_object))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_filesystem_product_delete_object &rArr; cfs_nv_object_delete &rArr; cfs_system_oc_object_delete &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b7]"></a>flash_filesystem_read_product_nv</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, cfs_demo.o(i.flash_filesystem_read_product_nv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = flash_filesystem_read_product_nv &rArr; _internal_flash_filesystem_read_nv &rArr; cfs_nv_read &rArr; cfs_filesystem_flsh_data_read &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_read_nv
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b8]"></a>flash_filesystem_write_product_nv</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, cfs_demo.o(i.flash_filesystem_write_product_nv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = flash_filesystem_write_product_nv &rArr; _internal_flash_filesystem_write_nv &rArr; cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_internal_flash_filesystem_write_nv
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[b9]"></a>fputc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, retarget_io.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stderr_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputs
</UL>

<P><STRONG><a name="[7a]"></a>fputs</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fputs.o(i.fputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[a3]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_delete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_object
</UL>

<P><STRONG><a name="[39]"></a>$Super$$main</STRONG> (Thumb, 550 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = $Super$$main &rArr; flash_filesystem_write_product_nv &rArr; _internal_flash_filesystem_write_nv &rArr; cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_port_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_ble_uart0_send_string
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_write_product_nv
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_read_product_nv
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_delete_object
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_current_valid_id_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_product_current_id_get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_erase_product_nv
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_object
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_uart0_config_init
</UL>

<P><STRONG><a name="[bf]"></a>system_ble_uart0_send_string</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, system_uart.o(i.system_ble_uart0_send_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = system_ble_uart0_send_string &rArr; delay1ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendDataIt
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[bc]"></a>system_uart0_config_init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, system_uart.o(i.system_uart0_config_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = system_uart0_config_init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableIrq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ClrStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetPClkFreq
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[bb]"></a>system_uart0_port_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, system_uart.o(i.system_uart0_port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = system_uart0_port_init &rArr; Gpio_Init &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetAfMode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[62]"></a>_InitHidePin</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_hc32l17x.o(i._InitHidePin))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7c]"></a>__contrast_flash_data_block</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, cfs_system_oc.o(i.__contrast_flash_data_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __contrast_flash_data_block &rArr; cfs_port_system_flash_read_contrast &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read_contrast
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[80]"></a>__read_flash_data_block</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cfs_system_oc.o(i.__read_flash_data_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __read_flash_data_block &rArr; cfs_port_system_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
</UL>

<P><STRONG><a name="[82]"></a>__write_flash_data</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, cfs_system_oc.o(i.__write_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = __write_flash_data &rArr; cfs_port_system_flash_write_word &rArr; Flash_WriteWord
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_word
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_half_word
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_write_byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data_block
</UL>

<P><STRONG><a name="[86]"></a>__write_flash_data_block</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cfs_system_oc.o(i.__write_flash_data_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = __write_flash_data_block &rArr; __write_flash_data &rArr; cfs_port_system_flash_write_word &rArr; Flash_WriteWord
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_port_system_flash_lock_disable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__write_flash_data
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>

<P><STRONG><a name="[8b]"></a>cfs_filesystem_check_flash_repeat_address</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cycle_flash_system.o(i.cfs_filesystem_check_flash_repeat_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cfs_filesystem_check_flash_repeat_address &rArr; cfs_system_oc_flash_repeat_address
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_repeat_address
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
</UL>

<P><STRONG><a name="[8d]"></a>cfs_filesystem_cycle_data_write</STRONG> (Thumb, 140 bytes, Stack size 64 bytes, cycle_flash_system.o(i.cfs_filesystem_cycle_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cfs_filesystem_cycle_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_valid_data_number
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_valid_id_number_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_valid_id_number_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_id_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_id_get
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
</UL>

<P><STRONG><a name="[95]"></a>cfs_filesystem_fixed_data_write</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, cycle_flash_system.o(i.cfs_filesystem_fixed_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_system_object_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_set_write_flash_data
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_flash_checking_null_values
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_write_flash_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
</UL>

<P><STRONG><a name="[98]"></a>cfs_filesystem_flsh_data_read</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, cycle_flash_system.o(i.cfs_filesystem_flsh_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = cfs_filesystem_flsh_data_read &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
</UL>

<P><STRONG><a name="[9a]"></a>cfs_filesystem_object_add_oc_object</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, cycle_flash_system.o(i.cfs_filesystem_object_add_oc_object))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = cfs_filesystem_object_add_oc_object &rArr; cfs_system_oc_add_object &rArr; cfs_system_utils_crc16_xmodem_check
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_utils_crc16_xmodem_check
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_add_object
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
</UL>

<P><STRONG><a name="[9d]"></a>cfs_filesystem_object_id_init</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, cycle_flash_system.o(i.cfs_filesystem_object_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = cfs_filesystem_object_id_init &rArr; cfs_filesystem_tight_data_page_id_init &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_tight_data_page_id_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_valid_data_number
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_valid_id_number_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_struct_type_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_linked_crc_16_verify
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_object_id_set
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_object_init
</UL>

<P><STRONG><a name="[a0]"></a>cfs_filesystem_tight_data_page_id_init</STRONG> (Thumb, 338 bytes, Stack size 56 bytes, cycle_flash_system.o(i.cfs_filesystem_tight_data_page_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = cfs_filesystem_tight_data_page_id_init &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_via_id_calculate_addr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_system_object_get
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_system_oc_read_flash_data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_filesystem_object_id_init
</UL>

<P><STRONG><a name="[87]"></a>_internal_flash_filesystem_read_nv</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, cfs_demo.o(i._internal_flash_filesystem_read_nv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _internal_flash_filesystem_read_nv &rArr; cfs_nv_read &rArr; cfs_filesystem_flsh_data_read &rArr; cfs_system_oc_read_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_read
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_read_product_nv
</UL>

<P><STRONG><a name="[89]"></a>_internal_flash_filesystem_write_nv</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, cfs_demo.o(i._internal_flash_filesystem_write_nv))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _internal_flash_filesystem_write_nv &rArr; cfs_nv_write &rArr; cfs_filesystem_fixed_data_write &rArr; cfs_system_oc_set_write_flash_data &rArr; cfs_system_oc_via_id_calculate_addr &rArr; __aeabi_assert &rArr; fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfs_nv_write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_filesystem_write_product_nv
</UL>

<P><STRONG><a name="[ba]"></a>stderr_putchar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget_io.o(i.stderr_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[78]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>

<P><STRONG><a name="[29]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3a]"></a>Adc_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DAC_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>ClkTrim_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKTRIM_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>Dac_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DAC_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>Dmac_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>Flash_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_RAM_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>I2c0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>I2c1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>Lcd_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>LpTim0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM0_1_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>LpTim1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM0_1_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>LpUart0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>LpUart1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>Lvd_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>Pca_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>Pcnt_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCNT_IRQHandler
</UL>

<P><STRONG><a name="[52]"></a>PortA_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>PortB_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTB_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>PortC_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_E_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>PortD_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_F_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>PortE_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_E_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>PortF_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_F_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>Ram_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_RAM_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>Rtc_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>Spi0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>Spi1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>SysTick_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[63]"></a>Tim0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM0_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>Tim1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>Tim2_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>Tim3_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>Tim4_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>Tim5_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>Tim6_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>Uart0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_2_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>Uart1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_3_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>Uart2_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_2_IRQHandler
</UL>

<P><STRONG><a name="[6d]"></a>Uart3_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_3_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>Vc0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VC0_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>Vc1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VC1_2_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>Vc2_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VC1_2_IRQHandler
</UL>

<P><STRONG><a name="[76]"></a>Wdt_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_IRQHandler
</UL>
<HR></body></html>
