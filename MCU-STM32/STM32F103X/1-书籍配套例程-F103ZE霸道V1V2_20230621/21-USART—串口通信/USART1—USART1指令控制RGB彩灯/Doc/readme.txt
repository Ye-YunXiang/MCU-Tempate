/*********************************************************************************************/
【*】程序简介

-工程名称：USART1 指令控制 RGB 彩灯实验
-实验平台: 野火STM32 霸道 开发板 

【 ！】功能简介：
编写程序让开发板接收USART 数据，然后根据数据内容控制RGB彩灯的颜色


【*】注意事项：
必须在MDK 的工程选项把“Use MicroLIB”勾选上


【 ！】实验操作：
保证开发板相关硬件连接正确，用USB线连接开发板的USB转串口跟电脑，在电脑端打开串口调试助手，
把编译好的程序下载到开发板，此时串口调试助手即可收到开发板发过来的数据。
在串口调试助手发送区域输入一个特定字符，点击发送按钮，RGB 彩色灯状态随之改变。


/*********************************************************************************************/
【*】 引脚分配

LED：
	LED_R	<-----> PB5
	LED_G	<-----> PB0
	LED_B	<-----> PB1

	对应引脚低电平则LED灯亮。
	
USART1：
	CH340  RXD  <----->  USART1  TX  (PA9)
	CH340  TXD  <----->  USART1  RX  (PA10)


*开发板中的CH340的收发引脚默认通过跳帽连接到USART1， 如果想使用其他串口，
可以把 CH340 跟 USART1 直接的连接跳帽拔掉，然后再把其他串口的 IO用杜邦线接到CH340 的收发引脚即可。


/*********************************************************************************************/
【*】程序描述：

< bsp _usart.h >
   
	1.宏定义USART的端口、时钟、波特率
	2.宏定义USART对应的GPIO的时钟、引脚
	3.宏定义USART的中断



< bsp_usart.c  >

- 配置USART

	1.引用结构体
	2.把GPIO和串口外设的时钟打开，
	3.设置对应的引脚模式，TX引脚为复用推挽输出，RX引脚为浮空输入
	4.配置串口波特率、帧数据长度、停止位长度、是否启用校验位、是否使用硬件流控制、工作模式
	5.完成串口的初始化配置
	6.使能串口接收中断，使能串口

- 重定向 prinft 和 scanf函数

	1.修改属于printf函数内部的fputc函数，把字符写入我们的USART位置输出
	2.修改属于scanf函数内部的fgetc函数，使其等待串口输入数据再输出



< main.c >

	1.初始化LED、USART
	2.编写输入指令的提示信息到串口中
	3.循环等待，当获取到设定好的指令时，显示不同颜色的LED


PS：其中，LED函数定义在bsp_led.c 文件内


/*********************************************************************************************/

【*】 联系我们

-野火官网  :https://embedfire.com
-野火论坛  :http://www.firebbs.cn
-野火商城  :https://yehuosm.tmall.com/
-野火资料下载中心：http://doc.embedfire.com/products/link

/*********************************************************************************************/